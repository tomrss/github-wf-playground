name: Deploy

on:
  # Trigger the workflow on push on the main branch
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'CODEOWNERS'
      - '**.md'

jobs:
  publish-image:
    name: Publish image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        id: docker_login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tomrss/github-wf-playground/azure-appservice

      - name: Build and push Docker image
        id: docker_build_push
        uses: docker/build-push-action@v6
        with:
          context: azure-appservice
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-dev:
    name: Deploy Dev
    runs-on: ubuntu-24.04
    environment: dev
    needs: [publish-image]
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Deploy to Staging Slot
        uses: azure/webapps-deploy@v3
        with:
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          app-name: ${{ vars.APP_NAME }}
          images: ${{ needs.build-and-push-image.outputs.image-tags }}
          slot-name: staging

      - name: Ping Staging Health
        run: |
          curl \
            --retry 5 \
            --retry-max-time 120 \
            --retry-all-errors \
            -f 'https://${{ vars.APP_NAME }}-staging.azurewebsites.net${{ vars.HEALTH_CHECK_PATH }}'

      - name: Swap Staging and Production Slots
        run: |
          az webapp deployment slot swap \
            -g ${{ vars.RESOURCE_GROUP_NAME }} \
            -n ${{ vars.APP_NAME }} \
            --slot staging \
            --target-slot production

  deploy-prod:
    name: Deploy Prod
    runs-on: ubuntu-24.04
    environment: fakeprod
    needs: [publish-image, deploy-dev]
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Azure Login
        uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2.1.1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Deploy to Staging Slot
        uses: azure/webapps-deploy@de617f46172a906d0617bb0e50d81e9e3aec24c8 # v3.0.1
        with:
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          app-name: ${{ vars.APP_NAME }}
          images: ${{ needs.build-and-push-image.outputs.image-tags }}
          slot-name: staging

      - name: Ping Staging Health
        run: |
          curl \
            --retry 5 \
            --retry-max-time 120 \
            --retry-all-errors \
            -f 'https://${{ vars.APP_NAME }}-staging.azurewebsites.net${{ vars.HEALTH_CHECK_PATH }}'

      - name: Swap Staging and Production Slots
        run: |
          az webapp deployment slot swap \
            -g ${{ vars.RESOURCE_GROUP_NAME }} \
            -n ${{ vars.APP_NAME }} \
            --slot staging \
            --target-slot production
